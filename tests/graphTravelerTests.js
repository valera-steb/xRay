/**
 * Created by steb on 03/05/2016.
 */
define(['c/ai/graphTraveler'], function (stateMarker) {

    describe('graphTraveler - обход идёт с конца в начало', function () {
        var
            graph,
            testPath = [
                'xyyx', '0x00', '00x0', 'x000', 'xy0x', 'yyxx', 'yxyx'
            ];

        beforeEach(function () {
            graph = JSON.parse(
                '{"keys":{"base":{"i":1,"t":[2],"f":[],"m":""},"0000":{"i":2,"t":[3,16,26,33],"f":[1],"m":""},"x000":{"i":3,"t":[4,9,13],"f":[2],"m":""},"xy00":{"i":4,"t":[5,7],"f":[3],"m":""},"xyx0":{"i":5,"t":[6,6],"f":[4,30],"m":""},"xyxy":{"i":6,"t":[],"f":[5,15,5,15],"m":""},"xy0x":{"i":7,"t":[8,8],"f":[4,35],"m":""},"xyyx":{"i":8,"t":[],"f":[7,12,7,12],"m":""},"x0y0":{"i":9,"t":[10,12],"f":[3],"m":""},"xxy0":{"i":10,"t":[11,11],"f":[9,22],"m":""},"xxyy":{"i":11,"t":[],"f":[10,14,10,14],"m":""},"x0yx":{"i":12,"t":[8,8],"f":[9,36],"m":""},"x00y":{"i":13,"t":[14,15],"f":[3],"m":""},"xx0y":{"i":14,"t":[11,11],"f":[13,24],"m":""},"x0xy":{"i":15,"t":[6,6],"f":[13,32],"m":""},"0x00":{"i":16,"t":[17,22,24],"f":[2],"m":""},"yx00":{"i":17,"t":[18,20],"f":[16],"m":""},"yxx0":{"i":18,"t":[19,19],"f":[17,27],"m":""},"yxxy":{"i":19,"t":[],"f":[18,25,18,25],"m":""},"yx0x":{"i":20,"t":[21,21],"f":[17,34],"m":""},"yxyx":{"i":21,"t":[],"f":[20,23,20,23],"m":""},"0xy0":{"i":22,"t":[10,23],"f":[16],"m":""},"0xyx":{"i":23,"t":[21,21],"f":[22,36],"m":""},"0x0y":{"i":24,"t":[14,25],"f":[16],"m":""},"0xxy":{"i":25,"t":[19,19],"f":[24,32],"m":""},"00x0":{"i":26,"t":[27,30,32],"f":[2],"m":""},"y0x0":{"i":27,"t":[18,28],"f":[26],"m":""},"y0xx":{"i":28,"t":[29,29],"f":[27,34],"m":""},"yyxx":{"i":29,"t":[],"f":[28,31,28,31],"m":""},"0yx0":{"i":30,"t":[5,31],"f":[26],"m":""},"0yxx":{"i":31,"t":[29,29],"f":[30,35],"m":""},"00xy":{"i":32,"t":[15,25],"f":[26],"m":""},"000x":{"i":33,"t":[34,35,36],"f":[2],"m":""},"y00x":{"i":34,"t":[20,28],"f":[33],"m":""},"0y0x":{"i":35,"t":[7,31],"f":[33],"m":""},"00yx":{"i":36,"t":[12,23],"f":[33],"m":""}},"idToKey":{"1":"base","2":"0000","3":"x000","4":"xy00","5":"xyx0","6":"xyxy","7":"xy0x","8":"xyyx","9":"x0y0","10":"xxy0","11":"xxyy","12":"x0yx","13":"x00y","14":"xx0y","15":"x0xy","16":"0x00","17":"yx00","18":"yxx0","19":"yxxy","20":"yx0x","21":"yxyx","22":"0xy0","23":"0xyx","24":"0x0y","25":"0xxy","26":"00x0","27":"y0x0","28":"y0xx","29":"yyxx","30":"0yx0","31":"0yxx","32":"00xy","33":"000x","34":"y00x","35":"0y0x","36":"00yx"}}'
            )
        });


        xit('должен строить список предыдущих вершин (от набора стартовых)', function () {

        });

        xit('должен у предыдущих вершин находить список последующих ещё не посещённых', function () {

        });

        xit('должен посещать вершину только когда её последующие уже посетил', function () {

        });

        xit('должен посещать стартовый набор вершин', function () {

        });

        xit('должен после посещения вершины убирать её из списков последующих вершин ' +
            'вершин которые входят в список предыдущих вершин', function () {

        });

        xit('должен удалять вершину из списка предыдущих после посещения', function () {

        });

        xit('должен выполнять посещение вершин из списка предыдущих, ' +
            'пока они там есть', function () {

        });
    });
});